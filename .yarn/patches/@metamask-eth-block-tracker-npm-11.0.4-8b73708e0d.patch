diff --git a/dist/PollingBlockTracker.d.ts b/dist/PollingBlockTracker.d.ts
index a0016deb9c3ce5848a94168e134bc07fa6d6930b..09af31f0ebc034436e7cb3e9a53f817d30e59036 100644
--- a/dist/PollingBlockTracker.d.ts
+++ b/dist/PollingBlockTracker.d.ts
@@ -5,6 +5,7 @@ export interface PollingBlockTrackerOptions {
     provider?: SafeEventEmitterProvider;
     pollingInterval?: number;
     retryTimeout?: number;
+    maxRetryTimeout?: number;
     keepEventLoopActive?: boolean;
     setSkipCacheFlag?: boolean;
     blockResetDuration?: number;
@@ -20,7 +21,8 @@ export declare class PollingBlockTracker extends SafeEventEmitter implements Blo
     private _pollingTimeout?;
     private readonly _provider;
     private readonly _pollingInterval;
-    private readonly _retryTimeout;
+    private readonly _baseRetryTimeout;
+    private readonly _maxRetryTimeout;
     private readonly _keepEventLoopActive;
     private readonly _setSkipCacheFlag;
     constructor(opts?: PollingBlockTrackerOptions);
diff --git a/dist/PollingBlockTracker.js b/dist/PollingBlockTracker.js
index 5417552b912df97c3de6697cd3c2485e76e79a42..2c9190f7dd7e81cf0b80359f02e98c4a233662cc 100644
--- a/dist/PollingBlockTracker.js
+++ b/dist/PollingBlockTracker.js
@@ -1,19 +1,19 @@
 "use strict";
-var __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {
-    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
-    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
-    return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
-};
 var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {
     if (kind === "m") throw new TypeError("Private method is not writable");
     if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a setter");
     if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot write private member to an object whose class did not declare it");
     return (kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;
 };
+var __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {
+    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
+    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
+    return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
+};
 var __importDefault = (this && this.__importDefault) || function (mod) {
     return (mod && mod.__esModule) ? mod : { "default": mod };
 };
-var _PollingBlockTracker_instances, _PollingBlockTracker_internalEventListeners, _PollingBlockTracker_pendingLatestBlock, _PollingBlockTracker_addInternalListener, _PollingBlockTracker_removeInternalListener, _PollingBlockTracker_rejectPendingLatestBlock;
+var _PollingBlockTracker_instances, _PollingBlockTracker__retryTimeout, _PollingBlockTracker_internalEventListeners, _PollingBlockTracker_pendingLatestBlock, _PollingBlockTracker_addInternalListener, _PollingBlockTracker_removeInternalListener, _PollingBlockTracker_rejectPendingLatestBlock;
 Object.defineProperty(exports, "__esModule", { value: true });
 exports.PollingBlockTracker = void 0;
 const safe_event_emitter_1 = __importDefault(require("@metamask/safe-event-emitter"));
@@ -26,12 +26,14 @@ const sec = 1000;
 const blockTrackerEvents = ['sync', 'latest'];
 class PollingBlockTracker extends safe_event_emitter_1.default {
     constructor(opts = {}) {
+        var _a;
         // parse + validate args
         if (!opts.provider) {
             throw new Error('PollingBlockTracker - no provider specified.');
         }
         super();
         _PollingBlockTracker_instances.add(this);
+        _PollingBlockTracker__retryTimeout.set(this, void 0);
         _PollingBlockTracker_internalEventListeners.set(this, []);
         _PollingBlockTracker_pendingLatestBlock.set(this, void 0);
         // config
@@ -49,7 +51,9 @@ class PollingBlockTracker extends safe_event_emitter_1.default {
         // config
         this._provider = opts.provider;
         this._pollingInterval = opts.pollingInterval || 20 * sec;
-        this._retryTimeout = opts.retryTimeout || this._pollingInterval / 10;
+        __classPrivateFieldSet(this, _PollingBlockTracker__retryTimeout, opts.retryTimeout || this._pollingInterval / 10, "f");
+        this._baseRetryTimeout = __classPrivateFieldGet(this, _PollingBlockTracker__retryTimeout, "f");
+        this._maxRetryTimeout = (_a = opts.maxRetryTimeout) !== null && _a !== void 0 ? _a : this._pollingInterval;
         this._keepEventLoopActive =
             opts.keepEventLoopActive === undefined ? true : opts.keepEventLoopActive;
         this._setSkipCacheFlag = opts.setSkipCacheFlag || false;
@@ -223,6 +227,7 @@ class PollingBlockTracker extends safe_event_emitter_1.default {
         try {
             const result = await this._provider.request(req);
             log('Got result', result);
+            __classPrivateFieldSet(this, _PollingBlockTracker__retryTimeout, this._baseRetryTimeout, "f");
             return result;
         }
         catch (error) {
@@ -235,20 +240,31 @@ class PollingBlockTracker extends safe_event_emitter_1.default {
      * Updates the latest block and then queues the next update.
      */
     async _updateAndQueue() {
-        var _a;
+        var _a, _b;
         let interval = this._pollingInterval;
         try {
             await this._updateLatestBlock();
         }
         catch (err) {
-            const newErr = new Error(`PollingBlockTracker - encountered an error while attempting to update latest block:\n${(_a = err.stack) !== null && _a !== void 0 ? _a : err}`);
+            const errMessage = 'PollingBlockTracker - encountered an error while attempting to update latest block';
+            const newErr = new Error(`${errMessage}:\n${(_a = err.stack) !== null && _a !== void 0 ? _a : err}`);
             try {
                 this.emit('error', newErr);
             }
             catch (emitErr) {
-                console.error(newErr);
+                // Only log unexpected errors
+                if (err.code === -32603 && ((_b = err.message) === null || _b === void 0 ? void 0 : _b.startsWith('NetworkError '))) {
+                    console.warn(`${errMessage}:\n${err.message}`);
+                }
+                else {
+                    console.error(newErr);
+                }
+            }
+            // Increase delay for each retry until max
+            if (__classPrivateFieldGet(this, _PollingBlockTracker__retryTimeout, "f") < this._maxRetryTimeout) {
+                __classPrivateFieldSet(this, _PollingBlockTracker__retryTimeout, Math.min(__classPrivateFieldGet(this, _PollingBlockTracker__retryTimeout, "f") * 1.5, this._maxRetryTimeout), "f");
             }
-            interval = this._retryTimeout;
+            interval = __classPrivateFieldGet(this, _PollingBlockTracker__retryTimeout, "f");
         }
         if (!this._isRunning) {
             return;
@@ -273,7 +289,7 @@ class PollingBlockTracker extends safe_event_emitter_1.default {
     }
 }
 exports.PollingBlockTracker = PollingBlockTracker;
-_PollingBlockTracker_internalEventListeners = new WeakMap(), _PollingBlockTracker_pendingLatestBlock = new WeakMap(), _PollingBlockTracker_instances = new WeakSet(), _PollingBlockTracker_addInternalListener = function _PollingBlockTracker_addInternalListener(listener) {
+_PollingBlockTracker__retryTimeout = new WeakMap(), _PollingBlockTracker_internalEventListeners = new WeakMap(), _PollingBlockTracker_pendingLatestBlock = new WeakMap(), _PollingBlockTracker_instances = new WeakSet(), _PollingBlockTracker_addInternalListener = function _PollingBlockTracker_addInternalListener(listener) {
     __classPrivateFieldGet(this, _PollingBlockTracker_internalEventListeners, "f").push(listener);
 }, _PollingBlockTracker_removeInternalListener = function _PollingBlockTracker_removeInternalListener(listener) {
     __classPrivateFieldGet(this, _PollingBlockTracker_internalEventListeners, "f").splice(__classPrivateFieldGet(this, _PollingBlockTracker_internalEventListeners, "f").indexOf(listener), 1);
diff --git a/dist/PollingBlockTracker.js.map b/dist/PollingBlockTracker.js.map
index 9e996cb93e27545d416a4884d1364433c223b655..a96acb40ebba22fd6a2ed42e2daa8d6bccecada0 100644
--- a/dist/PollingBlockTracker.js.map
+++ b/dist/PollingBlockTracker.js.map
@@ -1 +1 @@
-{"version":3,"file":"PollingBlockTracker.js","sourceRoot":"","sources":["../src/PollingBlockTracker.ts"],"names":[],"mappings":"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","sourcesContent":["import type { SafeEventEmitterProvider } from '@metamask/eth-json-rpc-provider';\nimport SafeEventEmitter from '@metamask/safe-event-emitter';\nimport {\n  createDeferredPromise,\n  type DeferredPromise,\n  getErrorMessage,\n  type JsonRpcRequest,\n} from '@metamask/utils';\nimport getCreateRandomId from 'json-rpc-random-id';\n\nimport type { BlockTracker } from './BlockTracker';\nimport { projectLogger, createModuleLogger } from './logging-utils';\n\nconst log = createModuleLogger(projectLogger, 'polling-block-tracker');\nconst createRandomId = getCreateRandomId();\nconst sec = 1000;\n\nconst blockTrackerEvents: (string | symbol)[] = ['sync', 'latest'];\n\nexport interface PollingBlockTrackerOptions {\n  provider?: SafeEventEmitterProvider;\n  pollingInterval?: number;\n  retryTimeout?: number;\n  keepEventLoopActive?: boolean;\n  setSkipCacheFlag?: boolean;\n  blockResetDuration?: number;\n  usePastBlocks?: boolean;\n}\n\ninterface ExtendedJsonRpcRequest extends JsonRpcRequest<[]> {\n  skipCache?: boolean;\n}\n\ntype InternalListener = (value: string) => void;\n\nexport class PollingBlockTracker\n  extends SafeEventEmitter\n  implements BlockTracker\n{\n  private _isRunning: boolean;\n\n  private readonly _blockResetDuration: number;\n\n  private readonly _usePastBlocks: boolean;\n\n  private _currentBlock: string | null;\n\n  private _blockResetTimeout?: ReturnType<typeof setTimeout>;\n\n  private _pollingTimeout?: ReturnType<typeof setTimeout>;\n\n  private readonly _provider: SafeEventEmitterProvider;\n\n  private readonly _pollingInterval: number;\n\n  private readonly _retryTimeout: number;\n\n  private readonly _keepEventLoopActive: boolean;\n\n  private readonly _setSkipCacheFlag: boolean;\n\n  readonly #internalEventListeners: InternalListener[] = [];\n\n  #pendingLatestBlock?: Omit<DeferredPromise<string>, 'resolve'>;\n\n  constructor(opts: PollingBlockTrackerOptions = {}) {\n    // parse + validate args\n    if (!opts.provider) {\n      throw new Error('PollingBlockTracker - no provider specified.');\n    }\n\n    super();\n\n    // config\n    this._blockResetDuration = opts.blockResetDuration || 20 * sec;\n    this._usePastBlocks = opts.usePastBlocks || false;\n    // state\n    this._currentBlock = null;\n    this._isRunning = false;\n\n    // bind functions for internal use\n    this._onNewListener = this._onNewListener.bind(this);\n    this._onRemoveListener = this._onRemoveListener.bind(this);\n    this._resetCurrentBlock = this._resetCurrentBlock.bind(this);\n\n    // listen for handler changes\n    this._setupInternalEvents();\n\n    // config\n    this._provider = opts.provider;\n    this._pollingInterval = opts.pollingInterval || 20 * sec;\n    this._retryTimeout = opts.retryTimeout || this._pollingInterval / 10;\n    this._keepEventLoopActive =\n      opts.keepEventLoopActive === undefined ? true : opts.keepEventLoopActive;\n    this._setSkipCacheFlag = opts.setSkipCacheFlag || false;\n  }\n\n  async destroy() {\n    this._cancelBlockResetTimeout();\n    this._maybeEnd();\n    super.removeAllListeners();\n    this.#rejectPendingLatestBlock(new Error('Block tracker destroyed'));\n  }\n\n  isRunning(): boolean {\n    return this._isRunning;\n  }\n\n  getCurrentBlock(): string | null {\n    return this._currentBlock;\n  }\n\n  async getLatestBlock(): Promise<string> {\n    // return if available\n    if (this._currentBlock) {\n      return this._currentBlock;\n    } else if (this.#pendingLatestBlock) {\n      return await this.#pendingLatestBlock.promise;\n    }\n\n    const { promise, resolve, reject } = createDeferredPromise<string>({\n      suppressUnhandledRejection: true,\n    });\n    this.#pendingLatestBlock = { reject, promise };\n\n    // wait for a new latest block\n    const onLatestBlock = (value: string) => {\n      this.#removeInternalListener(onLatestBlock);\n      resolve(value);\n      this.#pendingLatestBlock = undefined;\n    };\n    this.#addInternalListener(onLatestBlock);\n    this.once('latest', onLatestBlock);\n    return await promise;\n  }\n\n  // dont allow module consumer to remove our internal event listeners\n  removeAllListeners(eventName?: string | symbol) {\n    // perform default behavior, preserve fn arity\n    if (eventName) {\n      super.removeAllListeners(eventName);\n    } else {\n      super.removeAllListeners();\n    }\n\n    // re-add internal events\n    this._setupInternalEvents();\n    // trigger stop check just in case\n    this._onRemoveListener();\n\n    return this;\n  }\n\n  private _setupInternalEvents(): void {\n    // first remove listeners for idempotence\n    this.removeListener('newListener', this._onNewListener);\n    this.removeListener('removeListener', this._onRemoveListener);\n    // then add them\n    this.on('newListener', this._onNewListener);\n    this.on('removeListener', this._onRemoveListener);\n  }\n\n  private _onNewListener(eventName: string | symbol): void {\n    // `newListener` is called *before* the listener is added\n    if (blockTrackerEvents.includes(eventName)) {\n      // TODO: Handle dangling promise\n      this._maybeStart();\n    }\n  }\n\n  private _onRemoveListener(): void {\n    // `removeListener` is called *after* the listener is removed\n    if (this._getBlockTrackerEventCount() > 0) {\n      return;\n    }\n    this._maybeEnd();\n  }\n\n  private _maybeStart() {\n    if (this._isRunning) {\n      return;\n    }\n\n    this._isRunning = true;\n    // cancel setting latest block to stale\n    this._cancelBlockResetTimeout();\n    this._start();\n    this.emit('_started');\n  }\n\n  private _maybeEnd() {\n    if (!this._isRunning) {\n      return;\n    }\n\n    this._isRunning = false;\n    this._setupBlockResetTimeout();\n    this._end();\n    this.emit('_ended');\n  }\n\n  private _getBlockTrackerEventCount(): number {\n    return (\n      blockTrackerEvents\n        .map((eventName) => this.listeners(eventName))\n        .flat()\n        // internal listeners are not included in the count\n        .filter((listener) =>\n          this.#internalEventListeners.every(\n            (internalListener) => !Object.is(internalListener, listener),\n          ),\n        ).length\n    );\n  }\n\n  private _shouldUseNewBlock(newBlock: string) {\n    const currentBlock = this._currentBlock;\n    if (!currentBlock) {\n      return true;\n    }\n    const newBlockInt = hexToInt(newBlock);\n    const currentBlockInt = hexToInt(currentBlock);\n\n    return (\n      (this._usePastBlocks && newBlockInt < currentBlockInt) ||\n      newBlockInt > currentBlockInt\n    );\n  }\n\n  private _newPotentialLatest(newBlock: string): void {\n    if (!this._shouldUseNewBlock(newBlock)) {\n      return;\n    }\n    this._setCurrentBlock(newBlock);\n  }\n\n  private _setCurrentBlock(newBlock: string): void {\n    const oldBlock = this._currentBlock;\n    this._currentBlock = newBlock;\n    this.emit('latest', newBlock);\n    this.emit('sync', { oldBlock, newBlock });\n  }\n\n  private _setupBlockResetTimeout(): void {\n    // clear any existing timeout\n    this._cancelBlockResetTimeout();\n    // clear latest block when stale\n    this._blockResetTimeout = setTimeout(\n      this._resetCurrentBlock,\n      this._blockResetDuration,\n    );\n\n    // nodejs - dont hold process open\n    if (this._blockResetTimeout.unref) {\n      this._blockResetTimeout.unref();\n    }\n  }\n\n  private _cancelBlockResetTimeout(): void {\n    if (this._blockResetTimeout) {\n      clearTimeout(this._blockResetTimeout);\n    }\n  }\n\n  private _resetCurrentBlock(): void {\n    this._currentBlock = null;\n  }\n\n  // trigger block polling\n  async checkForLatestBlock() {\n    await this._updateLatestBlock();\n    return await this.getLatestBlock();\n  }\n\n  private _start() {\n    // Intentionally not awaited as this starts the polling via a timeout chain.\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    this._updateAndQueue();\n  }\n\n  private _end() {\n    this._clearPollingTimeout();\n  }\n\n  private async _updateLatestBlock(): Promise<void> {\n    // fetch + set latest block\n    const latestBlock = await this._fetchLatestBlock();\n    this._newPotentialLatest(latestBlock);\n  }\n\n  private async _fetchLatestBlock(): Promise<string> {\n    const req: ExtendedJsonRpcRequest = {\n      jsonrpc: '2.0',\n      id: createRandomId(),\n      method: 'eth_blockNumber',\n      params: [] as [],\n    };\n    if (this._setSkipCacheFlag) {\n      req.skipCache = true;\n    }\n\n    log('Making request', req);\n    try {\n      const result = await this._provider.request<[], string>(req);\n      log('Got result', result);\n      return result;\n    } catch (error) {\n      log('Encountered error fetching block', getErrorMessage(error));\n      throw error;\n    }\n  }\n\n  /**\n   * The core polling function that runs after each interval.\n   * Updates the latest block and then queues the next update.\n   */\n  private async _updateAndQueue() {\n    let interval = this._pollingInterval;\n\n    try {\n      await this._updateLatestBlock();\n    } catch (err: any) {\n      const newErr = new Error(\n        `PollingBlockTracker - encountered an error while attempting to update latest block:\\n${\n          err.stack ?? err\n        }`,\n      );\n\n      try {\n        this.emit('error', newErr);\n      } catch (emitErr) {\n        console.error(newErr);\n      }\n\n      interval = this._retryTimeout;\n    }\n\n    if (!this._isRunning) {\n      return;\n    }\n\n    this._clearPollingTimeout();\n\n    const timeoutRef = setTimeout(() => {\n      // Intentionally not awaited as this just continues the polling loop.\n      // eslint-disable-next-line @typescript-eslint/no-floating-promises\n      this._updateAndQueue();\n    }, interval);\n\n    if (timeoutRef.unref && !this._keepEventLoopActive) {\n      timeoutRef.unref();\n    }\n\n    this._pollingTimeout = timeoutRef;\n\n    this.emit('_waitingForNextIteration');\n  }\n\n  _clearPollingTimeout() {\n    if (this._pollingTimeout) {\n      clearTimeout(this._pollingTimeout);\n      this._pollingTimeout = undefined;\n    }\n  }\n\n  #addInternalListener(listener: InternalListener) {\n    this.#internalEventListeners.push(listener);\n  }\n\n  #removeInternalListener(listener: InternalListener) {\n    this.#internalEventListeners.splice(\n      this.#internalEventListeners.indexOf(listener),\n      1,\n    );\n  }\n\n  #rejectPendingLatestBlock(error: unknown) {\n    this.#pendingLatestBlock?.reject(error);\n    this.#pendingLatestBlock = undefined;\n  }\n}\n\n/**\n * Converts a number represented as a string in hexadecimal format into a native\n * number.\n *\n * @param hexInt - The hex string.\n * @returns The number.\n */\nfunction hexToInt(hexInt: string): number {\n  return Number.parseInt(hexInt, 16);\n}\n"]}
\ No newline at end of file
+{"version":3,"file":"PollingBlockTracker.js","sourceRoot":"","sources":["../src/PollingBlockTracker.ts"],"names":[],"mappings":"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","sourcesContent":["import type { SafeEventEmitterProvider } from '@metamask/eth-json-rpc-provider';\nimport SafeEventEmitter from '@metamask/safe-event-emitter';\nimport {\n  createDeferredPromise,\n  type DeferredPromise,\n  getErrorMessage,\n  type JsonRpcRequest,\n} from '@metamask/utils';\nimport getCreateRandomId from 'json-rpc-random-id';\n\nimport type { BlockTracker } from './BlockTracker';\nimport { projectLogger, createModuleLogger } from './logging-utils';\n\nconst log = createModuleLogger(projectLogger, 'polling-block-tracker');\nconst createRandomId = getCreateRandomId();\nconst sec = 1000;\n\nconst blockTrackerEvents: (string | symbol)[] = ['sync', 'latest'];\n\nexport interface PollingBlockTrackerOptions {\n  provider?: SafeEventEmitterProvider;\n  pollingInterval?: number;\n  retryTimeout?: number;\n  maxRetryTimeout?: number;\n  keepEventLoopActive?: boolean;\n  setSkipCacheFlag?: boolean;\n  blockResetDuration?: number;\n  usePastBlocks?: boolean;\n}\n\ninterface ExtendedJsonRpcRequest extends JsonRpcRequest<[]> {\n  skipCache?: boolean;\n}\n\ntype InternalListener = (value: string) => void;\n\nexport class PollingBlockTracker\n  extends SafeEventEmitter\n  implements BlockTracker\n{\n  private _isRunning: boolean;\n\n  private readonly _blockResetDuration: number;\n\n  private readonly _usePastBlocks: boolean;\n\n  private _currentBlock: string | null;\n\n  private _blockResetTimeout?: ReturnType<typeof setTimeout>;\n\n  private _pollingTimeout?: ReturnType<typeof setTimeout>;\n\n  private readonly _provider: SafeEventEmitterProvider;\n\n  private readonly _pollingInterval: number;\n\n  #_retryTimeout: number;\n\n  private readonly _baseRetryTimeout: number;\n\n  private readonly _maxRetryTimeout: number;\n\n  private readonly _keepEventLoopActive: boolean;\n\n  private readonly _setSkipCacheFlag: boolean;\n\n  readonly #internalEventListeners: InternalListener[] = [];\n\n  #pendingLatestBlock?: Omit<DeferredPromise<string>, 'resolve'>;\n\n  constructor(opts: PollingBlockTrackerOptions = {}) {\n    // parse + validate args\n    if (!opts.provider) {\n      throw new Error('PollingBlockTracker - no provider specified.');\n    }\n\n    super();\n\n    // config\n    this._blockResetDuration = opts.blockResetDuration || 20 * sec;\n    this._usePastBlocks = opts.usePastBlocks || false;\n    // state\n    this._currentBlock = null;\n    this._isRunning = false;\n\n    // bind functions for internal use\n    this._onNewListener = this._onNewListener.bind(this);\n    this._onRemoveListener = this._onRemoveListener.bind(this);\n    this._resetCurrentBlock = this._resetCurrentBlock.bind(this);\n\n    // listen for handler changes\n    this._setupInternalEvents();\n\n    // config\n    this._provider = opts.provider;\n    this._pollingInterval = opts.pollingInterval || 20 * sec;\n    this.#_retryTimeout = opts.retryTimeout || this._pollingInterval / 10;\n    this._baseRetryTimeout = this.#_retryTimeout;\n    this._maxRetryTimeout = opts.maxRetryTimeout ?? this._pollingInterval;\n    this._keepEventLoopActive =\n      opts.keepEventLoopActive === undefined ? true : opts.keepEventLoopActive;\n    this._setSkipCacheFlag = opts.setSkipCacheFlag || false;\n  }\n\n  async destroy() {\n    this._cancelBlockResetTimeout();\n    this._maybeEnd();\n    super.removeAllListeners();\n    this.#rejectPendingLatestBlock(new Error('Block tracker destroyed'));\n  }\n\n  isRunning(): boolean {\n    return this._isRunning;\n  }\n\n  getCurrentBlock(): string | null {\n    return this._currentBlock;\n  }\n\n  async getLatestBlock(): Promise<string> {\n    // return if available\n    if (this._currentBlock) {\n      return this._currentBlock;\n    } else if (this.#pendingLatestBlock) {\n      return await this.#pendingLatestBlock.promise;\n    }\n\n    const { promise, resolve, reject } = createDeferredPromise<string>({\n      suppressUnhandledRejection: true,\n    });\n    this.#pendingLatestBlock = { reject, promise };\n\n    // wait for a new latest block\n    const onLatestBlock = (value: string) => {\n      this.#removeInternalListener(onLatestBlock);\n      resolve(value);\n      this.#pendingLatestBlock = undefined;\n    };\n    this.#addInternalListener(onLatestBlock);\n    this.once('latest', onLatestBlock);\n    return await promise;\n  }\n\n  // dont allow module consumer to remove our internal event listeners\n  removeAllListeners(eventName?: string | symbol) {\n    // perform default behavior, preserve fn arity\n    if (eventName) {\n      super.removeAllListeners(eventName);\n    } else {\n      super.removeAllListeners();\n    }\n\n    // re-add internal events\n    this._setupInternalEvents();\n    // trigger stop check just in case\n    this._onRemoveListener();\n\n    return this;\n  }\n\n  private _setupInternalEvents(): void {\n    // first remove listeners for idempotence\n    this.removeListener('newListener', this._onNewListener);\n    this.removeListener('removeListener', this._onRemoveListener);\n    // then add them\n    this.on('newListener', this._onNewListener);\n    this.on('removeListener', this._onRemoveListener);\n  }\n\n  private _onNewListener(eventName: string | symbol): void {\n    // `newListener` is called *before* the listener is added\n    if (blockTrackerEvents.includes(eventName)) {\n      // TODO: Handle dangling promise\n      this._maybeStart();\n    }\n  }\n\n  private _onRemoveListener(): void {\n    // `removeListener` is called *after* the listener is removed\n    if (this._getBlockTrackerEventCount() > 0) {\n      return;\n    }\n    this._maybeEnd();\n  }\n\n  private _maybeStart() {\n    if (this._isRunning) {\n      return;\n    }\n\n    this._isRunning = true;\n    // cancel setting latest block to stale\n    this._cancelBlockResetTimeout();\n    this._start();\n    this.emit('_started');\n  }\n\n  private _maybeEnd() {\n    if (!this._isRunning) {\n      return;\n    }\n\n    this._isRunning = false;\n    this._setupBlockResetTimeout();\n    this._end();\n    this.emit('_ended');\n  }\n\n  private _getBlockTrackerEventCount(): number {\n    return (\n      blockTrackerEvents\n        .map((eventName) => this.listeners(eventName))\n        .flat()\n        // internal listeners are not included in the count\n        .filter((listener) =>\n          this.#internalEventListeners.every(\n            (internalListener) => !Object.is(internalListener, listener),\n          ),\n        ).length\n    );\n  }\n\n  private _shouldUseNewBlock(newBlock: string) {\n    const currentBlock = this._currentBlock;\n    if (!currentBlock) {\n      return true;\n    }\n    const newBlockInt = hexToInt(newBlock);\n    const currentBlockInt = hexToInt(currentBlock);\n\n    return (\n      (this._usePastBlocks && newBlockInt < currentBlockInt) ||\n      newBlockInt > currentBlockInt\n    );\n  }\n\n  private _newPotentialLatest(newBlock: string): void {\n    if (!this._shouldUseNewBlock(newBlock)) {\n      return;\n    }\n    this._setCurrentBlock(newBlock);\n  }\n\n  private _setCurrentBlock(newBlock: string): void {\n    const oldBlock = this._currentBlock;\n    this._currentBlock = newBlock;\n    this.emit('latest', newBlock);\n    this.emit('sync', { oldBlock, newBlock });\n  }\n\n  private _setupBlockResetTimeout(): void {\n    // clear any existing timeout\n    this._cancelBlockResetTimeout();\n    // clear latest block when stale\n    this._blockResetTimeout = setTimeout(\n      this._resetCurrentBlock,\n      this._blockResetDuration,\n    );\n\n    // nodejs - dont hold process open\n    if (this._blockResetTimeout.unref) {\n      this._blockResetTimeout.unref();\n    }\n  }\n\n  private _cancelBlockResetTimeout(): void {\n    if (this._blockResetTimeout) {\n      clearTimeout(this._blockResetTimeout);\n    }\n  }\n\n  private _resetCurrentBlock(): void {\n    this._currentBlock = null;\n  }\n\n  // trigger block polling\n  async checkForLatestBlock() {\n    await this._updateLatestBlock();\n    return await this.getLatestBlock();\n  }\n\n  private _start() {\n    // Intentionally not awaited as this starts the polling via a timeout chain.\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    this._updateAndQueue();\n  }\n\n  private _end() {\n    this._clearPollingTimeout();\n  }\n\n  private async _updateLatestBlock(): Promise<void> {\n    // fetch + set latest block\n    const latestBlock = await this._fetchLatestBlock();\n    this._newPotentialLatest(latestBlock);\n  }\n\n  private async _fetchLatestBlock(): Promise<string> {\n    const req: ExtendedJsonRpcRequest = {\n      jsonrpc: '2.0',\n      id: createRandomId(),\n      method: 'eth_blockNumber',\n      params: [] as [],\n    };\n    if (this._setSkipCacheFlag) {\n      req.skipCache = true;\n    }\n\n    log('Making request', req);\n    try {\n      const result = await this._provider.request<[], string>(req);\n      log('Got result', result);\n\n      this.#_retryTimeout = this._baseRetryTimeout;\n      return result;\n    } catch (error) {\n      log('Encountered error fetching block', getErrorMessage(error));\n      throw error;\n    }\n  }\n\n  /**\n   * The core polling function that runs after each interval.\n   * Updates the latest block and then queues the next update.\n   */\n  private async _updateAndQueue() {\n    let interval = this._pollingInterval;\n\n    try {\n      await this._updateLatestBlock();\n    } catch (err: any) {\n      const errMessage =\n        'PollingBlockTracker - encountered an error while attempting to update latest block';\n      const newErr = new Error(`${errMessage}:\\n${err.stack ?? err}`);\n\n      try {\n        this.emit('error', newErr);\n      } catch (emitErr) {\n        // Only log unexpected errors\n        if (err.code === -32603 && err.message?.startsWith('NetworkError ')) {\n          console.warn(`${errMessage}:\\n${err.message}`);\n        } else {\n          console.error(newErr);\n        }\n      }\n\n      // Increase delay for each retry until max\n      if (this.#_retryTimeout < this._maxRetryTimeout) {\n        this.#_retryTimeout = Math.min(\n          this.#_retryTimeout * 1.5,\n          this._maxRetryTimeout,\n        );\n      }\n      interval = this.#_retryTimeout;\n    }\n\n    if (!this._isRunning) {\n      return;\n    }\n\n    this._clearPollingTimeout();\n\n    const timeoutRef = setTimeout(() => {\n      // Intentionally not awaited as this just continues the polling loop.\n      // eslint-disable-next-line @typescript-eslint/no-floating-promises\n      this._updateAndQueue();\n    }, interval);\n\n    if (timeoutRef.unref && !this._keepEventLoopActive) {\n      timeoutRef.unref();\n    }\n\n    this._pollingTimeout = timeoutRef;\n\n    this.emit('_waitingForNextIteration');\n  }\n\n  _clearPollingTimeout() {\n    if (this._pollingTimeout) {\n      clearTimeout(this._pollingTimeout);\n      this._pollingTimeout = undefined;\n    }\n  }\n\n  #addInternalListener(listener: InternalListener) {\n    this.#internalEventListeners.push(listener);\n  }\n\n  #removeInternalListener(listener: InternalListener) {\n    this.#internalEventListeners.splice(\n      this.#internalEventListeners.indexOf(listener),\n      1,\n    );\n  }\n\n  #rejectPendingLatestBlock(error: unknown) {\n    this.#pendingLatestBlock?.reject(error);\n    this.#pendingLatestBlock = undefined;\n  }\n}\n\n/**\n * Converts a number represented as a string in hexadecimal format into a native\n * number.\n *\n * @param hexInt - The hex string.\n * @returns The number.\n */\nfunction hexToInt(hexInt: string): number {\n  return Number.parseInt(hexInt, 16);\n}\n"]}
\ No newline at end of file
diff --git a/dist/index.d.ts b/dist/index.d.ts
index f67b3d2c210b020136b2ef9b21de5bc9f5a7b6b7..c74d98287ffc35c5be31b1fd88a542c95f988b48 100644
--- a/dist/index.d.ts
+++ b/dist/index.d.ts
@@ -1,3 +1,2 @@
 export * from './PollingBlockTracker';
-export * from './SubscribeBlockTracker';
 export * from './BlockTracker';
diff --git a/dist/index.js b/dist/index.js
index 1dc7f15a0889b8263422b6fb4118e90210011af2..c26f456e4b57fdee31f96da3934a2abe67539543 100644
--- a/dist/index.js
+++ b/dist/index.js
@@ -15,6 +15,5 @@ var __exportStar = (this && this.__exportStar) || function(m, exports) {
 };
 Object.defineProperty(exports, "__esModule", { value: true });
 __exportStar(require("./PollingBlockTracker"), exports);
-__exportStar(require("./SubscribeBlockTracker"), exports);
 __exportStar(require("./BlockTracker"), exports);
 //# sourceMappingURL=index.js.map
\ No newline at end of file
diff --git a/dist/index.js.map b/dist/index.js.map
index 397014fdba35bac87d9ef3aac77b13ca30a5c33d..cb94a174ab200a0fb9cdbad5f682392a60723a05 100644
--- a/dist/index.js.map
+++ b/dist/index.js.map
@@ -1 +1 @@
-{"version":3,"file":"index.js","sourceRoot":"","sources":["../src/index.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAAA,wDAAsC;AACtC,0DAAwC;AACxC,iDAA+B","sourcesContent":["export * from './PollingBlockTracker';\nexport * from './SubscribeBlockTracker';\nexport * from './BlockTracker';\n"]}
\ No newline at end of file
+{"version":3,"file":"index.js","sourceRoot":"","sources":["../src/index.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAAA,wDAAsC;AACtC,iDAA+B","sourcesContent":["export * from './PollingBlockTracker';\nexport * from './BlockTracker';\n"]}
\ No newline at end of file
